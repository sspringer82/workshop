import React, { Dispatch, useContext, useEffect, useReducer } from 'react';

const PersonContext = React.createContext<[State, Dispatch<Action>]>([
  { firstname: 'Dieter' },
  (e) => e,
]);

type State = { firstname: string };
type Action = { type: string; data: string };

function reducer(state: State, action: Action) {
  switch (action.type) {
    case 'rename':
      return { ...state, firstname: action.data };
      break;
  }
}

const Context: React.FC = () => {
  const [state, dispatch] = useReducer(reducer, {
    firstname: 'Klaus',
  });
  return (
    <div>
      <PersonContext.Provider value={[state, dispatch]}>
        <Intermediate />
      </PersonContext.Provider>
    </div>
  );
};

const Intermediate: React.FC = () => {
  return <Child />;
};

const Child: React.FC = () => {
  const [state, dispatch] = useContext(PersonContext);
  useEffect(() => {
    setTimeout(() => {
      dispatch({ type: 'rename', data: 'Claudia' });
    }, 1000);
  });
  return <div>Child: {state}</div>;
};

export default Context;
