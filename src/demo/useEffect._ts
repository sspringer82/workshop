import { useEffect } from 'react';

useEffect(() => {}); // bei jedem rerender
useEffect(() => {}, []); // nur 1x initial
useEffect(() => {}, [recipes]); // jedes mal, wenn sich foo ändert

// foo = state
// foo = props
// foo = context

useEffect(() => {
  return () => {
    console.log('cleanup before unmount');
  };
}, []);

// useEffect(async () => {
//   const response = await fetch();
//   const data = await response.json();
//   setRecipes(data);
// }, []);
// geht nicht weil Promise zurückgegeben wird
